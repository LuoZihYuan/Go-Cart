// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/products/{productId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a product's details using its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get product by ID",
                "operationId": "getProduct",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Product ID",
                        "name": "productId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/products/{productId}/details": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add or update detailed information for a specific product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Add product details",
                "operationId": "addProductDetails",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Product ID",
                        "name": "productId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product details",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product details added successfully"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Error": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string",
                    "example": "Product ID must be a positive integer"
                },
                "error": {
                    "type": "string",
                    "example": "INVALID_INPUT"
                },
                "message": {
                    "type": "string",
                    "example": "The provided input data is invalid"
                }
            }
        },
        "models.Product": {
            "type": "object",
            "required": [
                "category_id",
                "manufacturer",
                "product_id",
                "sku",
                "some_other_id",
                "weight"
            ],
            "properties": {
                "category_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 456
                },
                "manufacturer": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1,
                    "example": "Acme Corporation"
                },
                "product_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 12345
                },
                "sku": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "ABC-123-XYZ"
                },
                "some_other_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 789
                },
                "weight": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 1250
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "Product management operations",
            "name": "Products"
        },
        {
            "description": "Shopping cart operations",
            "name": "Shopping Cart"
        },
        {
            "description": "Warehouse and inventory operations",
            "name": "Warehouse"
        },
        {
            "description": "Payment processing operations",
            "name": "Payments"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "E-commerce API",
	Description:      "API for managing products, shopping carts, warehouse operations, and credit card processing",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
